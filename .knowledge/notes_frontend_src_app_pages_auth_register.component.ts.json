{"is_source_file": true, "format": "TypeScript", "description": "Angular component for user registration, handling form input, submission, and navigation upon success or failure.", "external_files": ["../../services/auth.service", "./register.component.html", "./auth.css"], "external_methods": ["this.auth.register", "this.router.navigate"], "published": ["RegisterComponent"], "classes": [{"name": "RegisterComponent", "description": "Angular component responsible for user registration, utilizing AuthService and Router, with form management and error handling."}], "methods": [{"name": "submit", "description": "Handles form submission for registration, manages loading state, calls AuthService.register, and navigates on success or sets error message on failure."}], "calls": ["this.auth.register", "this.router.navigate"], "search-terms": ["Angular registration component", "auth.service", "register.component.ts", "Form submission", "Angular router", "dependency injection"], "state": 2, "file_id": 41, "knowledge_revision": 85, "git_revision": "", "ctags": [{"_type": "tag", "name": "RegisterComponent", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-14310-14338/notes_frontend/src/app/pages/auth/register.component.ts", "pattern": "/^export class RegisterComponent {$/", "language": "TypeScript", "kind": "class"}, {"_type": "tag", "name": "auth", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-14310-14338/notes_frontend/src/app/pages/auth/register.component.ts", "pattern": "/^  private auth = inject(AuthService);$/", "language": "TypeScript", "kind": "property", "scope": "RegisterComponent", "scopeKind": "class"}], "hash": "e109e6ec1f120e2a0e6f267a0b85f4a2", "format-version": 4, "code-base-name": "notes_frontend", "filename": "notes_frontend/src/app/pages/auth/register.component.ts", "fields": [{"name": "private auth = inject(AuthService);", "scope": "RegisterComponent", "scopeKind": "class", "description": "unavailable"}], "revision_history": [{"85": ""}]}