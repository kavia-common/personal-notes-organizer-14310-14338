{"is_source_file": true, "format": "TypeScript", "description": "This file defines an Angular service 'ApiService' that centralizes HTTP requests to a backend API, providing methods for GET, POST, PUT, PATCH, and DELETE HTTP operations with automatic handling of authorization headers and error processing.", "external_files": ["../../environments/environment", "@angular/core", "@angular/common/http", "rxjs", "rxjs/operators"], "external_methods": ["HttpClient.get", "HttpClient.post", "HttpClient.put", "HttpClient.patch", "HttpClient.delete", "catchError", "throwError"], "published": ["ApiService"], "classes": [{"name": "ApiService", "description": "Angular service for making HTTP requests to the backend, handling URL construction, headers, and error handling."}], "methods": [{"name": "url", "description": "Constructs a full URL by prefixing the input path with the base API URL."}, {"name": "headers", "description": "Builds HTTP headers, attaching an authorization token if available in local storage."}, {"name": "get", "description": "Performs an HTTP GET request with parameters and error handling."}, {"name": "post", "description": "Performs an HTTP POST request with optional body and error handling."}, {"name": "put", "description": "Performs an HTTP PUT request with optional body and error handling."}, {"name": "patch", "description": "Performs an HTTP PATCH request with optional body and error handling."}, {"name": "delete", "description": "Performs an HTTP DELETE request with error handling."}, {"name": "handleError", "description": "Handles HTTP errors, logs them, and returns an observable throwing an Error."}], "calls": ["this.http.get", "this.http.post", "this.http.put", "this.http.patch", "this.http.delete", "this.handleError"], "search-terms": ["Angular ApiService", "HTTP request wrapper", "authorization headers", "backend API URL"], "state": 2, "file_id": 26, "knowledge_revision": 109, "git_revision": "", "revision_history": [{"54": ""}, {"106": ""}, {"109": ""}], "ctags": [{"_type": "tag", "name": "ApiService", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-14310-14338/notes_frontend/src/app/services/api.service.ts", "pattern": "/^export class ApiService {$/", "language": "TypeScript", "kind": "class"}, {"_type": "tag", "name": "g", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-14310-14338/notes_frontend/src/app/services/api.service.ts", "pattern": "/^    const g: any = typeof globalThis !== 'undefined' ? globalThis : {};$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "headers", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-14310-14338/notes_frontend/src/app/services/api.service.ts", "pattern": "/^    let headers = new HttpHeaders({ 'Content-Type': 'application\\/json' });$/", "language": "TypeScript", "kind": "variable"}, {"_type": "tag", "name": "http", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-14310-14338/notes_frontend/src/app/services/api.service.ts", "pattern": "/^  private http = inject(HttpClient);$/", "language": "TypeScript", "kind": "property", "scope": "ApiService", "scopeKind": "class"}, {"_type": "tag", "name": "ls", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-14310-14338/notes_frontend/src/app/services/api.service.ts", "pattern": "/^    const ls: any = g.localStorage as any;$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "ls", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-14310-14338/notes_frontend/src/app/services/api.service.ts", "pattern": "/^    const token = ls && typeof ls.getItem === 'function' ? ls.getItem('auth_token') : null;$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "message", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-14310-14338/notes_frontend/src/app/services/api.service.ts", "pattern": "/^    const message = err.error?.message || err.message || 'Unknown error';$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "normalizedPath", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-14310-14338/notes_frontend/src/app/services/api.service.ts", "pattern": "/^    const normalizedPath = path.startsWith('\\/') ? path : `\\/${path}`;$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "token", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-14310-14338/notes_frontend/src/app/services/api.service.ts", "pattern": "/^    const token = ls && typeof ls.getItem === 'function' ? ls.getItem('auth_token') : null;$/", "language": "TypeScript", "kind": "constant"}], "hash": "d0c1c8f1c802e26563e51c1ea1a98cd3", "format-version": 4, "code-base-name": "notes_frontend", "filename": "notes_frontend/src/app/services/api.service.ts", "fields": [{"name": "let headers = new HttpHeaders({ 'Content-Type': 'application\\/json' });", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "private http = inject(HttpClient);", "scope": "ApiService", "scopeKind": "class", "description": "unavailable"}]}